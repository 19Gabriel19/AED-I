#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#define MAX_ROWS 1000
#define MAX_COLS 1000
typedef struct {
    int first, second;
} Pair;
bool visited[MAX_ROWS][MAX_COLS];
int main() {
    int rows, columns;
    scanf("%d %d", &columns, &rows);
    char map[MAX_ROWS][MAX_COLS];
    for (int i = 0; i < rows; ++i) {
        scanf("%s", map[i]);
    }
    memset(visited, 0, sizeof(visited));
    bool foundTreasure = false;
    Pair pos = {0, 0};
    while (true) {
        char currChar = map[pos.first][pos.second];
        visited[pos.first][pos.second] = true;
        if (currChar == '*') {
            foundTreasure = true;
            break;
        }
        if (currChar == '.') break;
        if (currChar == '<') {
            if (pos.second - 1 < 0) break;
            for (int i = pos.second - 1; i >= 0; --i) {
                pos.second = i;
                if (map[pos.first][pos.second] != '.') break;
            }
        } else if (currChar == '>') {
            if (pos.second + 1 >= columns) break;
            for (int i = pos.second + 1; i < columns; ++i) {
                pos.second = i;
                if (map[pos.first][pos.second] != '.') break;
            }
        } else if (currChar == '^') {
            if (pos.first - 1 < 0) break;
            for (int i = pos.first - 1; i >= 0; --i) {
                pos.first = i;
                if (map[pos.first][pos.second] != '.') break;
            }
        } else { // currChar == 'v'
            if (pos.first + 1 >= rows) break;

            for (int i = pos.first + 1; i < rows; ++i) {
                pos.first = i;
                if (map[pos.first][pos.second] != '.') break;
            }
        }
        if (visited[pos.first][pos.second]) {
            break;
        }
    }
    printf("%c\n", foundTreasure ? '*' : '!');
    return 0;
}
